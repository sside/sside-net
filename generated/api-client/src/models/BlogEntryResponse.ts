/* tslint:disable */
/* eslint-disable */
/**
 * sside.net
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from "../runtime";
import type { BlogEntryMetaTagResponse } from "./BlogEntryMetaTagResponse";
import {
    BlogEntryMetaTagResponseFromJSON,
    BlogEntryMetaTagResponseFromJSONTyped,
    BlogEntryMetaTagResponseToJSON,
    BlogEntryMetaTagResponseToJSONTyped,
} from "./BlogEntryMetaTagResponse";

/**
 *
 * @export
 * @interface BlogEntryResponse
 */
export interface BlogEntryResponse {
    /**
     *
     * @type {number}
     * @memberof BlogEntryResponse
     */
    id: number;
    /**
     *
     * @type {Date}
     * @memberof BlogEntryResponse
     */
    createdAt: Date;
    /**
     *
     * @type {Date}
     * @memberof BlogEntryResponse
     */
    updatedAt: Date;
    /**
     *
     * @type {string}
     * @memberof BlogEntryResponse
     */
    slug: string;
    /**
     *
     * @type {string}
     * @memberof BlogEntryResponse
     */
    title: string;
    /**
     *
     * @type {string}
     * @memberof BlogEntryResponse
     */
    bodyMarkdown: string;
    /**
     *
     * @type {Array<BlogEntryMetaTagResponse>}
     * @memberof BlogEntryResponse
     */
    metaTags: Array<BlogEntryMetaTagResponse>;
}

/**
 * Check if a given object implements the BlogEntryResponse interface.
 */
export function instanceOfBlogEntryResponse(
    value: object,
): value is BlogEntryResponse {
    if (!("id" in value) || value["id"] === undefined) return false;
    if (!("createdAt" in value) || value["createdAt"] === undefined)
        return false;
    if (!("updatedAt" in value) || value["updatedAt"] === undefined)
        return false;
    if (!("slug" in value) || value["slug"] === undefined) return false;
    if (!("title" in value) || value["title"] === undefined) return false;
    if (!("bodyMarkdown" in value) || value["bodyMarkdown"] === undefined)
        return false;
    if (!("metaTags" in value) || value["metaTags"] === undefined) return false;
    return true;
}

export function BlogEntryResponseFromJSON(json: any): BlogEntryResponse {
    return BlogEntryResponseFromJSONTyped(json, false);
}

export function BlogEntryResponseFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): BlogEntryResponse {
    if (json == null) {
        return json;
    }
    return {
        id: json["id"],
        createdAt: new Date(json["createdAt"]),
        updatedAt: new Date(json["updatedAt"]),
        slug: json["slug"],
        title: json["title"],
        bodyMarkdown: json["bodyMarkdown"],
        metaTags: (json["metaTags"] as Array<any>).map(
            BlogEntryMetaTagResponseFromJSON,
        ),
    };
}

export function BlogEntryResponseToJSON(json: any): BlogEntryResponse {
    return BlogEntryResponseToJSONTyped(json, false);
}

export function BlogEntryResponseToJSONTyped(
    value?: BlogEntryResponse | null,
    ignoreDiscriminator: boolean = false,
): any {
    if (value == null) {
        return value;
    }

    return {
        id: value["id"],
        createdAt: value["createdAt"].toISOString(),
        updatedAt: value["updatedAt"].toISOString(),
        slug: value["slug"],
        title: value["title"],
        bodyMarkdown: value["bodyMarkdown"],
        metaTags: (value["metaTags"] as Array<any>).map(
            BlogEntryMetaTagResponseToJSON,
        ),
    };
}
